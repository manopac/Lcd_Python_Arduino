#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Fonts/FreeMonoBoldOblique24pt7b.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
#define bitmap_height   48
#define bitmap_width    50
static const unsigned char PROGMEM bitmap[] =
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xfe, 0x3c, 0x00, 0x0f, 0x3f, 0xff, 0xf0, 0x1f, 
  0x80, 0xff, 0x0f, 0x00, 0x00, 0x04, 0x07, 0xff, 0x30, 0x1f, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xe7, 
  0xc0, 0x03, 0xff, 0xff, 0xf9, 0xf7, 0x8c, 0x03, 0xff, 0xff, 0x3f, 0xf9, 0x9e, 0x0b, 0xff, 0xff, 
  0xff, 0xff, 0x9c, 0x0b, 0xff, 0xff, 0xff, 0xff, 0xbe, 0x8b, 0xff, 0xff, 0xff, 0xff, 0xb3, 0xcb, 
  0xff, 0xff, 0xff, 0xff, 0x61, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x71, 0x07, 0xff, 0xff, 0xff, 0xff, 
  0x7f, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0b, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x0f, 
  0xff, 0xff, 0xff, 0xff, 0xdc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xfb, 0xff, 
  0xfc, 0x1f, 0xff, 0xff, 0x1f, 0x00, 0x78, 0x1f, 0xff, 0xff, 0x0c, 0x00, 0x70, 0x00, 0x7f, 0xff, 
  0x80, 0x00, 0x38, 0x00, 0x0f, 0xff, 0x10, 0x00, 0x18, 0x00, 0x03, 0xff, 0x20, 0x00, 0x40, 0x00, 
  0x01, 0xff, 0xf0, 0x00, 0x20, 0x00, 0x00, 0xff, 0xf0, 0x01, 0x38, 0x00, 0x00, 0x7f, 0xf6, 0x08, 
  0x8c, 0x38, 0x00, 0x7f, 0xe6, 0x68, 0x07, 0x80, 0x00, 0x7f, 0xe7, 0xf8, 0x47, 0xfc, 0x00, 0x7f, 
  0xe5, 0xff, 0xc3, 0xff, 0x00, 0x3f, 0xe1, 0xff, 0xa1, 0xff, 0x00, 0x3f, 0xe1, 0xff, 0xf0, 0xff, 
  0x00, 0x1f, 0xe1, 0xff, 0xf0, 0x7e, 0x00, 0x1f, 0xc3, 0xff, 0xeb, 0x3e, 0x00, 0x0f, 0x83, 0xff, 
  0xe7, 0x9e, 0x00, 0x07, 0x83, 0xff, 0xf7, 0xf8, 0x0c, 0x01, 0x83, 0xff, 0xf3, 0xfc, 0x0c, 0x00
};
void setup() {
  Serial.begin(9600);
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Don't proceed, loop forever
  }
  // Clear the buffer
  display.clearDisplay();
}
void loop() {
  showBitmap();
}
void showBitmap(void) {
  display.clearDisplay();
  display.drawBitmap(39, 10, bitmap, bitmap_height, bitmap_width, WHITE);
  display.display();
  delay(1000);
}
